---
title: Reading List
---

1. Big C++: 
   * 7. Pointers and Structures
   * 8. Streams 
   * 9. Classes
   * 10. Inheritence 
   * 13. Advanced C++ 
   * 14. Linked Lists, Stacks and Queues
   * 15. Sets, maps, and Hash Tables
   * 16. Tree Structures
   * 17. Priority Queues and Heaps 
2. C++ Primer
   * 2.2 - 2.6
   * 3
   * 4.10,11
   * 5.6
   * 6 - 16
   * 17.1, 17.5
   * 18
   * 19
4. Tour of C++
3. Programming Principles and Practice Using C++, Bjarne Stroustrup
3. C++ Crash Course - Lospinoso
4. Move Semantics C++
   * 1. the power of movec semantics
   * 2. core features of move semantics
   * 3. move semantics in classes
   * 4. how to benefit from move semantics
   * 9. perfecct forwarding
5. C++ Templates - josuttis
   * 1. function templates
   * 2. class templates
   * 3. nontype template parameters
   * 4. variadic templates
   * 5. tricky basics
   * 6. move semantics and `enable_if<>`
   * 7. By Value or by Reference? 
   * 8. Compile-Time Programming 
   * 9. Using Templates in Practice
   * 10. Basic Template Terminology
   * 11. Generic Libraries
   * 12. Fundamnetals in Depth
   * 13. Names in Templates
   * 14. Instantiation
   * 15. Template Argument Deduction
   * 16. Specialization and Overloading
   * 18. The Polymorphic Power of Templates
6. The C++ STL
   * 1. About this book
   * 2. Intro to C++ and STL
   * 3. New Language Features
   * 4. General Concepts
   * 5. Utilities
   * 6. STL
   * 7. STL Containers
   * 8. STL Container Members in Detail
   * 9. STL Iterators
   * 10. STL function Objects and Using Lambdas
   * 11. STL Algorithms
   * 12. Special Containers
   * 13. Strings
   * 15. Stream Classes
   * 18. Concurerency
7. Discovering Modern C++ 
   * 1. C++ Basics: 1.5 - 1.8
   * 2. Classes: 
   * 3. Generic Programming
   * 4. Libraries
   * 5. Metaprogramming
   * 6. OOP
   * 7. Scientific Projects
8. Data Structures and Algorithms in C++ - Mark Allen Weiss
9.  Data Structures and Problem Solving Using C++ - Mark Allen Weisse
10. Objektorientiertes Programmieren in C++ 
11. Functional Programming in C++ - Cukic
    1.  intro to functioal programming
    2.  getting started with functional programming
    3.  function objects
    4.  creating new functions from old ones
    5.  purity: avoiding mutable state
    6.  lazy evaluation
    7.  ranges
    8.  functional data structures
    9.  algebraic data types and pattern matching
    10. monads
    11. template metaprogramming
    12. functional design for concurrent systesm
    13. Testing and Debugging
12. Object-Oriented Software Design in C++. Ronald Mak
13. From Mathematics to Generic Programming. Alexander Stepanov, Daniel Rose
